#!/bin/bash

echo "Starting AVideo Platform..."
CONFIG_FILE=/etc/apache2/sites-enabled/000-default.conf

if [ "_${CREATE_TLS_CERTIFICATE}_" == "_yes_" ]; then
  echo "Generate Certificate..."
  echo "Certificate file: ${TLS_CERTIFICATE_FILE}"
  echo "Certificate key: ${TLS_CERTIFICATE_KEY}"

  mkdir -p `dirname ${TLS_CERTIFICATE_FILE}`
  mkdir -p `dirname ${TLS_CERTIFICATE_KEY}`
  subjectAltName="IP:127.0.0.1,DNS:${SERVER_NAME}"
  
  CONFIG=""
  CONFIG="${CONFIG}[dn]\n"
  CONFIG="${CONFIG}C=NN\n"
  CONFIG="${CONFIG}L=Earth\n"
  CONFIG="${CONFIG}O=AVideo\n"
  CONFIG="${CONFIG}OU=Development\n"
  CONFIG="${CONFIG}CN=localhost\n"
  CONFIG="${CONFIG}\n"
  CONFIG="${CONFIG}[req]\n"
  CONFIG="${CONFIG}distinguished_name=dn\n"
  CONFIG="${CONFIG}\n"
  CONFIG="${CONFIG}[EXT]\n"
  CONFIG="${CONFIG}subjectAltName=${subjectAltName}\n"
  CONFIG="${CONFIG}extendedKeyUsage=serverAuth\n"
  CONFIG="${CONFIG}\n"
  
  openssl req -x509 \
    -out ${TLS_CERTIFICATE_FILE} -keyout ${TLS_CERTIFICATE_KEY} \
    -newkey rsa:4096 \
    -nodes \
    -sha256 \
    -days 3650 \
    -subj '/C=NN/L=Earth/O=avideo/OU=DEV/CN=localhost' \
    -extensions EXT -config <( \
      printf "${CONFIG}")
  
  echo "New Certificate config..."
  openssl x509 -in ${TLS_CERTIFICATE_FILE} -noout -text || true
fi

sed -i 's#SERVER_NAME#'${SERVER_NAME}'#' ${CONFIG_FILE}
sed -i 's#CONTACT_EMAIL#'${CONTACT_EMAIL}'#' ${CONFIG_FILE}

echo "Configure Apache..."
sed -i 's#TLS_CERTIFICATE_FILE#'${TLS_CERTIFICATE_FILE}'#' ${CONFIG_FILE}
sed -i 's#TLS_CERTIFICATE_KEY#'${TLS_CERTIFICATE_KEY}'#' ${CONFIG_FILE}

mkdir -p /etc/letsencrypt/live/localhost/

cp ${TLS_CERTIFICATE_FILE} /etc/letsencrypt/live/localhost/fullchain.pem
cp ${TLS_CERTIFICATE_KEY} /etc/letsencrypt/live/localhost/privkey.pem

echo "Waiting for database ${DB_MYSQL_HOST} to be up and running"
php /usr/local/bin/wait-for-db.php
if [ $? -ne 0 ]; then
  echo "Stopping container"
  exit 1
fi

if [ -f /var/www/html/AVideo/plugin/User_Location/install/install.sql ]; then
  echo "Using existing location tables..."
else
  echo "Create new locations tables..."
  cd /var/www/html/AVideo/plugin/User_Location/install && unzip install.zip 
  # Configure AVideo Encoder
  cd /var/www/html/AVideo && git config --global advice.detachedHead false && git clone https://github.com/WWBN/AVideo-Encoder.git Encoder
  # Configure AVideo permissions
  chown -R www-data:www-data /var/www/html/AVideo
fi

if [ -f /var/www/html/AVideo/Encoder/index.php ]; then
  echo "Using existing Encoder configuration..."
else
  echo "Create new  Encoder configuration..."
  # Configure AVideo Encoder
  cd /var/www/html/AVideo && git config --global advice.detachedHead false && git clone https://github.com/WWBN/AVideo-Encoder.git Encoder
fi

if [ -d /var/www/html/AVideo/Encoder/videos ]; then
  echo "Using existing Encoder videos..."
else
  echo "Create new  Encoder videos..."
  # Configure AVideo Encoder
  mkdir -p /var/www/html/AVideo/Encoder/videos && chown www-data:www-data /var/www/html/AVideo/Encoder/videos && chmod 777 /var/www/html/AVideo/Encoder/videos
fi

echo "Checking configuration..."
cd /var/www/html/AVideo/install/
php ./cli.php
cd /var/www/html/AVideo/

#if [ "_${ENABLE_PHPMYADMIN}_" = "_yes_" ]; then
#  echo "Enabling local PHPMyAdmin on https://${SERVER_NAME}/phpmyadmin"
#  cp /etc/apache2/conf-available/phpmyadmin.conf /etc/apache2/conf-enabled/phpmyadmin.conf
#  a2enmod proxy
#  a2enmod proxy_http
#fi

echo "lets encrypt apache ${SERVER_NAME}"
certbot --apache --non-interactive --agree-tos --register-unsafely-without-email --redirect --keep-until-expiring -d ${SERVER_NAME}
/etc/init.d/apache2 stop

echo "Start socket"
nohup php /var/www/html/AVideo/plugin/YPTSocket/server.php &

echo "Reset log"
echo '' > /var/www/html/AVideo/videos/avideo.log
chmod 777 /var/www/html/AVideo/videos/avideo.log

echo "deny access to .compose"
echo "Deny from all" > /var/www/html/AVideo/.compose/.htaccess

cd /var/www/html/AVideo/install && php updatedb.php
cd /var/www/html/AVideo/Encoder/install && php reencodeAllVideos.php

echo "crontab starting"
cron
service cron start
crontab /etc/cron.d/crontab

bash
source /etc/bash_completion

echo "apache2-foreground start"
apache2-foreground
echo "apache2-foreground done"


#eof